diff --git a/ports/esp32/Makefile b/ports/esp32/Makefile
index c8ca9262c..e6224a2a3 100644
--- a/ports/esp32/Makefile
+++ b/ports/esp32/Makefile
@@ -30,6 +30,11 @@ ifdef FROZEN_MANIFEST
        IDFPY_FLAGS += -D MICROPY_FROZEN_MANIFEST=$(FROZEN_MANIFEST)
 endif
 
+ifdef USER_COMPONENTS
+	IDFPY_FLAGS += -DEXTRA_COMPONENT_DIRS=${USER_COMPONENTS}
+endif
+
+
 all:
 	idf.py $(IDFPY_FLAGS) build
 	@$(PYTHON) makeimg.py \
diff --git a/ports/esp32/main.c b/ports/esp32/main.c
index a1c27c0a2..56b145478 100644
--- a/ports/esp32/main.c
+++ b/ports/esp32/main.c
@@ -95,6 +95,7 @@ void mp_task(void *pvParameter) {
     #else
     uart_stdout_init();
     #endif
+
     machine_init();
 
     size_t mp_task_heap_size;
diff --git a/ports/esp32/mphalport.c b/ports/esp32/mphalport.c
index 41e6e6ec0..761e93c01 100644
--- a/ports/esp32/mphalport.c
+++ b/ports/esp32/mphalport.c
@@ -107,13 +107,8 @@ void mp_hal_stdout_tx_strn(const char *str, size_t len) {
     if (release_gil) {
         MP_THREAD_GIL_EXIT();
     }
-    #if CONFIG_USB_ENABLED
     usb_tx_strn(str, len);
-    #elif CONFIG_ESP_CONSOLE_USB_SERIAL_JTAG
-    usb_serial_jtag_tx_strn(str, len);
-    #else
     uart_stdout_tx_strn(str, len);
-    #endif
     if (release_gil) {
         MP_THREAD_GIL_ENTER();
     }
diff --git a/ports/esp32/uart.c b/ports/esp32/uart.c
index f6493dc79..9d393a2fc 100644
--- a/ports/esp32/uart.c
+++ b/ports/esp32/uart.c
@@ -34,10 +34,31 @@
 #include "py/runtime.h"
 #include "py/mphal.h"
 #include "uart.h"
+#include "nvs.h"
 
 STATIC void uart_irq_handler(void *arg);
 
+static bool uart_inited = false;
+static void uart_stdout_do_init();
+
+static const char *TAG = "uart";
+
 void uart_stdout_init(void) {
+    nvs_handle_t h = 0;
+    esp_err_t err = nvs_open("tidal", NVS_READONLY, &h);
+    if (err == ESP_OK) {
+        int32_t val = 0;
+        err = nvs_get_i32(h, "uart_sdascl", &val);
+        if (err == ESP_OK && val > 0) {
+            uart_stdout_do_init();
+        } else {
+        }
+        nvs_close(h);
+    } else {
+    }
+}
+
+static void uart_stdout_do_init() {
     uart_config_t uartcfg = {
         .baud_rate = MICROPY_HW_UART_REPL_BAUD,
         .data_bits = UART_DATA_8_BITS,
@@ -57,9 +78,13 @@ void uart_stdout_init(void) {
     uart_isr_free(MICROPY_HW_UART_REPL);
     uart_isr_register(MICROPY_HW_UART_REPL, uart_irq_handler, NULL, ESP_INTR_FLAG_LOWMED | ESP_INTR_FLAG_IRAM, &handle);
     uart_enable_rx_intr(MICROPY_HW_UART_REPL);
+    uart_inited = true;
 }
 
 int uart_stdout_tx_strn(const char *str, size_t len) {
+    if (!uart_inited) {
+        return len;
+    }
     size_t remaining = len;
     // TODO add a timeout
     for (;;) {
diff --git a/ports/esp32/usb.c b/ports/esp32/usb.c
index 5a613d244..b1047c230 100644
--- a/ports/esp32/usb.c
+++ b/ports/esp32/usb.c
@@ -35,7 +35,7 @@
 
 #define CDC_ITF TINYUSB_CDC_ACM_0
 
-static uint8_t usb_rx_buf[CONFIG_USB_CDC_RX_BUFSIZE];
+static uint8_t usb_rx_buf[CONFIG_TINYUSB_CDC_RX_BUFSIZE];
 static uint8_t usb_cdc_connected;
 
 static void usb_callback_rx(int itf, cdcacm_event_t *event) {
